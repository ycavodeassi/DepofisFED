<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICD/AAEACAAoDAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAgAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYA8Pv/AKSgoACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAB0NEcAhPkPAIwxAAABAQEAAQEAAAAA
        AAAAAAEAAwQFAAcICQALkAYAAAAAAAEEAAAAAAAAAAAAAAEc9QAAkDQAAOsTAAAc9QAAkDQAAIsUAAAU
        9QAABAAAAC4dAAA89QAAAAAAAUkfAACE+QABeEYAAAAAAAEAQAAAgDQAAJA/AACQPwAAhR8AAAAAAAEA
        QAAAcGMAAVAgAAB49QAA8PYAAAABAACQPwAAOCIAAAj2AABcIgAAYyIAAPD2AAAAAQAAgD4AAKqyALSI
        +QABhPUAALImAAATdQAAAAAAACKbAACMPwAA048AAAEAAABgTAABDAEAAGBMAAHIBQAAGFQAAfD2AAAG
        LAAAAAAAAAAAAHQ0RwCE+Q8AfDAAAACKkgAAAAIAAwMCAAMFBQAEAAAAfQECAAAEEQASITEABhNRAAci
        cQAygZEACCNCAMEVUgDwJDMAcoIJABYXGAAaJSYAKCkqADU2NwA5OkMARUZHAElKUwBVVlcAWVpjAGVm
        ZwBpanMAdXZ3AHl6gwB0NEcAhPkPAAAwAACYmZoAo6SlAKeoqQCys7QAtre4ALrCwwDFxscAycrSANTV
        1gDY2doA4uPkAObn6ADq8fIA9PX2APj5+gAAAAEAAIA+AACqsgC0iPkAAYT1AACyJgAAE3UAAAAAAAAi
        mwAAjD8AANOPAAABAAAAYEwAAQwBAABgTAAByAUAABhUAAHw9gAABiwAAAAAAAAAAAAAAwAAAPD2AAAA
        AAAAipIAAAADAAEBAQABAQEAAAAAAAAAAQADBAUABwgJAAsTUQAHInEAMoGRAAgjQgDBFVIA8CQzAHKC
        CQAWFxgAGiUmACgpKgA1NjcAOTpDAEVGRwBJSlMAVVZXAFlaYwBlZmcAaWpzAHV2dwB5eoMAhYaHAImK
        kgCUlZYAmJmaAKOkpQCnqKkAsrO0ALa3uAC6wsMAxcbHAMnK0gDU1dYA2NnaAOLj5ADm5+gA6vHyAPT1
        9gD4+foAAAABAACAPgAAqrIAtIj5AAGE9QAAsiYAABN1AAAAAAAAIpsAAIw/AADTjwAAAQAAAGBMAAEM
        AQAAYEwAAcgFAAAYVAAB8PYAAAYsAAAAAAAAAAAAAAMAAADw9gAAAAAAAIiJAAAAAgACBAQABAcFAAQA
        AQB3AAEAAxEEACExBgBBUQcAcRMiAIEIFACRobEACSMzAPAVYgDRChYANOElABcYGQAmJygAKjU2ADg5
        OgBERUYAExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMT
        ExMTExMTExMTExMTExMTChMTExMTExMTExMTExMTExMTExMTExMTExMTExMKDAwKExMTExMTExMTExMT
        ExMTExMTExMTExMTExMTExMTCgkLDAsTEwoKExMTExMTExMTExMTExMTExMTExMTExMTExMKCwwHExMT
        ExMTExMTExMTExMTExMTExMTExMTExMTExMKCgwMBwoTExMTExMTExMTExMTExMTExMTExMTExMTExMT
        EwcMDBMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEwcMDBMTExMTExMTExMTExMTExMTExMTExMT
        ExMTExMTEwwMBxMTExMTExMTExMTExMTExMTExMTExMTExMTExMKCgAMExMTExMTExMTExMTExMTExMT
        ExMTExMTExMTEwoKCwwHExMTExMTExMTExMTExMTExMTExMTExMTExMTEwkJAAwTExMTExMTExMTExMT
        ExMTExMTExMTExMTExMKCQkADBMTExMTExMTExMTExMTExMTExMTExMTExMTEwkJbAALExMTExMTExMT
        ExMTExMTExMTExMTExMTEwoJbGxsAAsTExMTExMTExMTExMTExMTExMTExMTExMTEwkJbAAAChMTExMT
        ExMTExMTExMTExMTExMTExMTExMKCQlsAAwKExMTExMTExMTExMTExMTExMTExMTExMTEwkJCQAADBMT
        ExMTExMTExMTExMTExMTExMTExMTExMTCQkJAAAMExMTExMTExMTExMTExMTExMTExMTExMTExMKCQoA
        AAwTChMTExMTExMTExMTExMTExMTExMTExMTExMTEwkADAcTExMTExMTExMTExMTExMTExMTExMTExMT
        ExMKEwwMDAoTExMTExMTExMTExMTExMTExMTExMTExMTEwoTEwwMGBMTExMTExMTExMTExMTExMTExMT
        ExMTExMTExMTEwsMGAcTExMTExMTExMTExMTExMTExMTExMTExMTExMTCgoMDAcTExMTExMTExMTExMT
        ExMTExMTExMTExMTExMTExMKCxgHExMTChMTExMTExMTExMTExMTExMTExMTExMTExMKCgcMCwoKExMT
        ExMTExMTExMTExMTExMTExMTExMTCgoTCgoJCwwTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMT
        CgoTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMT
        ExMTExMTExMTEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAB
        AAAAAQAAAAEAAAABAAAAAwAAAAIAAAAGAAAABgAAAAYAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>